worker_processes 1;

events { worker_connections 1024; }

http {
    sendfile on;

    server {
        listen      80;
        listen [::]:80;
        server_name neologism.us;

        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }

        location ^~ /.well-known {
            allow all;
            root  /data/letsencrypt/;
        }
    }

    server {
        listen      443           ssl http2;
        listen [::]:443           ssl http2;
        server_name               neologism.us

        ssl                       on;

        add_header                Strict-Transport-Security "max-age=31536000" always;

        ssl_session_cache         shared:SSL:20m;
        ssl_session_timeout       10m;

        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

        ssl_stapling              on;
        ssl_stapling_verify       on;
        resolver                  8.8.8.8 8.8.4.4;

        ssl_certificate           /etc/letsencrypt/live/neologism.us/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/neologism.us/privkey.pem;
        ssl_trusted_certificate   /etc/letsencrypt/live/neologism.us/chain.pem;

        access_log                /dev/stdout;
        error_log                 /dev/stderr info;

        gzip on;
        gzip_disable "msie6";
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

        location / {
            root /usr/share/nginx/html;

            try_files $uri /index.html;
        }

        location /api/ {
            proxy_pass http://neologisms:8001/api/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
